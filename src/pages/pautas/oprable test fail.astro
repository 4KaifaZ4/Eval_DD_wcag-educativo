---
// src/pages/pautas/operable.astro
import MainLayout from '../../layouts/MainLayout.astro';
import WCAGBadge from '../../components/WCAGBadge.astro';

// Datos estructurados
const pautaData = {
  title: "Pauta 2: Operable - Principios de Accesibilidad WCAG",
  description: "Garantiza que todos los componentes de la interfaz sean operables mediante teclado, con tiempo suficiente y sin causar convulsiones.",
  level: "AA"
};

const ejemplosTeclado = [
  {
    tipo: "malo",
    titulo: "Componente no accesible",
    icono: "‚ùå",
    codigo: `<div class="custom-btn" onclick="submitForm()">
  Enviar formulario
</div>`,
    problemas: "No enfocable con teclado, no responde a Enter/Space, falta rol ARIA."
  },
  {
    tipo: "bueno",
    titulo: "Componente accesible",
    icono: "‚úÖ",
    codigo: `<button 
  class="btn-primary"
  onclick="submitForm()"
  onkeydown="if(event.key==='Enter'||event.key===' ')submitForm()"
>
  Enviar formulario
</button>`,
    ventajas: "Enfocable, operable con teclado, sem√°ntico, auto-documentado."
  }
];

const teclasAccesibilidad = [
  {
    categoria: "Navegaci√≥n b√°sica",
    items: [
      "Tab: Siguiente elemento enfocable",
      "Shift + Tab: Elemento anterior",
      "Enter/Space: Activar elemento"
    ]
  },
  {
    categoria: "Formularios",
    items: [
      "‚Üë/‚Üì: Seleccionar opciones",
      "Ctrl + ‚Üë/‚Üì: Desplazamiento en selects m√∫ltiples",
      "Esc: Cerrar di√°logos o men√∫s"
    ]
  },
  {
    categoria: "Navegaci√≥n avanzada",
    items: [
      "Inicio/Fin: Ir al inicio/fin de listas",
      "Alt + Tecla de acceso: Atajos personalizados",
      "F6: Ciclar entre marcos o paneles"
    ]
  }
];

const ejemplosTiempo = [
  {
    titulo: "Sesi√≥n expirable",
    codigo: `// Mostrar advertencia con tiempo
<div aria-live="polite" id="timeout-warning">
  Su sesi√≥n expirar√° en <span id="countdown">5:00</span>
  <button id="extend-btn">Extender sesi√≥n</button>
</div>`,
    buenasPracticas: [
      "Aviso m√≠nimo 20 segundos antes",
      "Opci√≥n para extender tiempo",
      "Guardar progreso autom√°ticamente"
    ]
  }
];
---

<MainLayout title={pautaData.title} description={pautaData.description}>
  <article class="container mx-auto px-4 py-12 max-w-4xl" id="main">
    <header class="mb-12 text-center">
      <h1 class="text-4xl font-bold mb-4 text-indigo-700 dark:text-indigo-400">{pautaData.title}</h1>
      <WCAGBadge level={pautaData.level} class="mx-auto mb-6" />
      <p class="text-xl max-w-2xl mx-auto leading-relaxed">{pautaData.description}</p>
      
      <!-- Video introductorio -->
      <div class="mt-8 aspect-w-16 aspect-h-9">
        <iframe 
          src="https://www.youtube.com/embed/H4FzW9oFObs" 
          title="Introducci√≥n a la operabilidad accesible" 
          frameborder="0" 
          allowfullscreen
          class="w-full rounded-lg shadow-md"
        ></iframe>
      </div>
    </header>

    <!-- Secci√≥n 2.1 Accesible por Teclado -->
    <section aria-labelledby="keyboard" class="mb-16 p-6 bg-white dark:bg-gray-800 rounded-xl shadow-md">
      <h2 id="keyboard" class="text-3xl font-bold mb-6 pb-2 border-b-2 border-indigo-200 dark:border-gray-700">
        2.1 Accesible por Teclado
      </h2>

      <p class="mb-6 text-lg">Toda funcionalidad debe ser operable mediante teclado sin requerir tiempos espec√≠ficos para las pulsaciones.</p>

      <!-- Ejemplos comparativos -->
      <div class="grid md:grid-cols-2 gap-8 my-8">
        {ejemplosTeclado.map(ejemplo => (
          <div class={`border-2 ${ejemplo.tipo === "bueno" ? "border-green-400 dark:border-green-600 bg-green-50 dark:bg-gray-900" : "border-red-400 dark:border-red-600 bg-red-50 dark:bg-gray-900"} p-6 rounded-lg`} key={ejemplo.titulo}>
            <h3 class={`font-bold text-xl mb-4 flex items-center ${ejemplo.tipo === "bueno" ? "text-green-700 dark:text-green-400" : "text-red-700 dark:text-red-400"}`}>
              <span class={`${ejemplo.tipo === "bueno" ? "bg-green-100 dark:bg-green-900" : "bg-red-100 dark:bg-red-900"} p-2 rounded-full mr-3`}>{ejemplo.icono}</span>
              {ejemplo.titulo}
            </h3>
            <div class="bg-white dark:bg-gray-800 p-4 rounded border border-gray-200 dark:border-gray-700">
              <div class="code-block bg-gray-900 text-gray-100 p-4 rounded text-sm overflow-x-auto">
                <pre><code>{ejemplo.codigo}</code></pre>
              </div>
              <p class="mt-3 text-sm">
                {ejemplo.tipo === "bueno" ? (
                  <span class="text-green-600 dark:text-green-400"><strong>Ventajas:</strong> {ejemplo.ventajas}</span>
                ) : (
                  <span class="text-red-600 dark:text-red-400"><strong>Problemas:</strong> {ejemplo.problemas}</span>
                )}
              </p>
            </div>
          </div>
        ))}
      </div>

      <!-- Demo interactiva de navegaci√≥n por teclado -->
      <div class="mt-8 bg-blue-50 dark:bg-blue-900/20 p-6 rounded-lg border border-blue-200 dark:border-blue-800">
        <h3 class="text-xl font-semibold mb-4 text-blue-700 dark:text-blue-400">üîß Demo de Navegaci√≥n por Teclado</h3>
        
        <div class="grid md:grid-cols-3 gap-6 mt-4">
          {teclasAccesibilidad.map(grupo => (
            <div class="bg-white dark:bg-gray-700 p-4 rounded-lg shadow-sm" key={grupo.categoria}>
              <h4 class="font-medium mb-3 text-indigo-600 dark:text-indigo-400">{grupo.categoria}</h4>
              <ul class="space-y-2 text-sm">
                {grupo.items.map(item => (
                  <li class="flex items-start" key={item}>
                    <span class="mr-2 mt-1">‚Ä¢</span>
                    <span>{item}</span>
                  </li>
                ))}
              </ul>
            </div>
          ))}
        </div>
        
        <!-- Ejemplo pr√°ctico -->
        <div class="mt-6 p-4 bg-white dark:bg-gray-700 rounded-lg border border-gray-200 dark:border-gray-600">
          <h4 class="font-medium mb-3">Prueba la navegaci√≥n:</h4>
          <div class="flex flex-wrap gap-3">
            <button class="px-4 py-2 bg-indigo-100 dark:bg-indigo-900 rounded hover:bg-indigo-200 dark:hover:bg-indigo-800 focus:ring-2 focus:ring-indigo-500 focus:outline-none transition">
              Bot√≥n 1
            </button>
            <a href="#" class="px-4 py-2 bg-indigo-100 dark:bg-indigo-900 rounded hover:bg-indigo-200 dark:hover:bg-indigo-800 focus:ring-2 focus:ring-indigo-500 focus:outline-none transition">
              Enlace 1
            </a>
            <button class="px-4 py-2 bg-indigo-100 dark:bg-indigo-900 rounded hover:bg-indigo-200 dark:hover:bg-indigo-800 focus:ring-2 focus:ring-indigo-500 focus:outline-none transition">
              Bot√≥n 2
            </button>
          </div>
          <p class="mt-3 text-sm text-gray-600 dark:text-gray-400">Usa Tab para navegar y Enter/Space para activar</p>
        </div>
      </div>
    </section>

    <!-- Secci√≥n 2.2 Tiempo Ajustable -->
    <section aria-labelledby="timing" class="mb-16 p-6 bg-white dark:bg-gray-800 rounded-xl shadow-md">
      <h2 id="timing" class="text-3xl font-bold mb-6 pb-2 border-b-2 border-indigo-200 dark:border-gray-700">
        2.2 Tiempo Ajustable
      </h2>
      
      <p class="mb-6 text-lg">Los usuarios deben tener control sobre l√≠mites de tiempo.</p>
      
      <!-- Video explicativo -->
      <div class="aspect-w-16 aspect-h-9 mb-8">
        <iframe 
          src="https://www.youtube.com/embed/8IkUCIQe3o4" 
          title="Tiempos ajustables en accesibilidad" 
          frameborder="0" 
          allowfullscreen
          class="w-full rounded-lg shadow-md"
        ></iframe>
      </div>
      
      <div>
        <h3 class="text-xl font-semibold mb-3">Ejemplo de aviso de sesi√≥n con tiempo ajustable</h3>
        <div class="bg-gray-100 dark:bg-gray-700 p-6 rounded-lg border border-gray-300 dark:border-gray-600">
          <pre class="text-sm overflow-auto"><code>{ejemplosTiempo[0].codigo}</code></pre>
          <ul class="mt-3 list-disc list-inside text-gray-700 dark:text-gray-300">
            {ejemplosTiempo[0].buenasPracticas.map(p => (
              <li key={p}>{p}</li>
            ))}
          </ul>
        </div>
      </div>
    </section>
  </article>

  <!-- Skip link din√°mico agregado en cliente -->
  <script is:inline>
    document.addEventListener('DOMContentLoaded', () => {
      const skipLink = document.createElement('a');
      skipLink.href = '#main';
      skipLink.className = 'sr-only focus:not-sr-only block p-2 bg-indigo-600 text-white text-center fixed top-2 left-2 z-50 rounded';
      skipLink.textContent = 'Saltar al contenido principal';
      document.body.prepend(skipLink);
    });
  </script>
</MainLayout>
